[gd_resource type="VisualShader" load_steps=23 format=3 uid="uid://d2dg3d8i3f7df"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_4doxw"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hmdxm"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pq22b"]
parameter_name = "angle"
hint = 1
max = 360.0
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_f2dvt"]
function = 27

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_abmxc"]
operator = 8

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_vy04x"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.25, 0.25, 0.25, 0.25)]
expanded_output_ports = [0]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_p0fum"]
parameter_name = "color"
default_value_enabled = true
default_value = Color(0, 0.784314, 0.0980392, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_kvprr"]
parameter_name = "prev_color"
default_value_enabled = true
default_value = Color(1, 0, 0, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_txxce"]
constant = 1.0

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_1jt4x"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_tgrei"]
default_input_values = [0, 0.0, 1, 2.25]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_o77hu"]
parameter_name = "lightRadius"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_7djsj"]
default_input_values = [0, 0.0, 1, -1.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_n1mmh"]
default_input_values = [0, 0.0, 1, 180.0]
operator = 1

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_5uegd"]
function = 31

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_bfq1x"]
constant = Color(1, 1, 1, 0)

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_0wvks"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_vr8t6"]
default_input_values = [0, 0.0, 1, 0.5, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_7p3k8"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_be0k5"]
parameter_name = "alpha"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_imh7f"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_p0f5d"]
parameter_name = "alphaTolerance"
hint = 1
default_value_enabled = true

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float angle : hint_range(0, 360) = 0;
uniform vec4 color : source_color = vec4(0.000000, 0.784314, 0.098039, 1.000000);
uniform vec4 prev_color : source_color = vec4(1.000000, 0.000000, 0.000000, 1.000000);
uniform float alpha : hint_range(0, 1) = 1;
uniform float lightRadius = 1;
uniform float alphaTolerance : hint_range(0, 1) = 0;



void fragment() {
// ColorConstant:67
	vec4 n_out67p0 = vec4(1.000000, 1.000000, 1.000000, 0.000000);


// Input:37
	vec2 n_out37p0 = UV;
	float n_out37p1 = n_out37p0.r;
	float n_out37p2 = n_out37p0.g;


// FloatOp:44
	float n_out44p0 = atan(n_out37p1, n_out37p2);


// FloatParameter:42
	float n_out42p0 = angle;


// FloatOp:61
	float n_in61p1 = 180.00000;
	float n_out61p0 = n_out42p0 - n_in61p1;


// FloatOp:60
	float n_in60p1 = -1.00000;
	float n_out60p0 = n_out61p0 * n_in60p1;


// FloatFunc:43
	float n_out43p0 = radians(n_out60p0);


// FloatConstant:54
	float n_out54p0 = 1.000000;


	vec3 n_out28p0;
// If:28
	float n_in28p2 = 0.00001;
	vec3 n_in28p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out44p0 - n_out43p0) < n_in28p2)
	{
		n_out28p0 = vec3(n_out54p0);
	}
	else if(n_out44p0 < n_out43p0)
	{
		n_out28p0 = n_in28p5;
	}
	else
	{
		n_out28p0 = vec3(n_out54p0);
	}


// ColorParameter:51
	vec4 n_out51p0 = color;


// ColorParameter:52
	vec4 n_out52p0 = prev_color;


	vec3 n_out70p0;
// If:70
	float n_in70p1 = 0.50000;
	float n_in70p2 = 0.00001;
	vec3 n_in70p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out28p0.x - n_in70p1) < n_in70p2)
	{
		n_out70p0 = n_in70p3;
	}
	else if(n_out28p0.x < n_in70p1)
	{
		n_out70p0 = vec3(n_out52p0.xyz);
	}
	else
	{
		n_out70p0 = vec3(n_out51p0.xyz);
	}


// VectorDecompose:71
	float n_out71p0 = vec4(n_out70p0, 0.0).x;
	float n_out71p1 = vec4(n_out70p0, 0.0).y;
	float n_out71p2 = vec4(n_out70p0, 0.0).z;
	float n_out71p3 = vec4(n_out70p0, 0.0).w;


// FloatParameter:72
	float n_out72p0 = alpha;


// VectorCompose:69
	vec4 n_out69p0 = vec4(n_out71p0, n_out71p1, n_out71p2, n_out72p0);


// FloatParameter:59
	float n_out59p0 = lightRadius;


// Distance:56
	vec2 n_in56p0 = vec2(0.00000, 0.00000);
	float n_out56p0 = distance(n_in56p0, n_out37p0);


// FloatFunc:66
	float n_out66p0 = 1.0 - n_out56p0;


// FloatOp:58
	float n_out58p0 = n_out59p0 * n_out66p0;


// Mix:50
	vec4 n_out50p0 = mix(n_out67p0, n_out69p0, vec4(n_out58p0));
	float n_out50p4 = n_out50p0.a;


// FloatParameter:74
	float n_out74p0 = alphaTolerance;


	vec3 n_out73p0;
// If:73
	float n_in73p2 = 0.00001;
	vec3 n_in73p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out50p4 - n_out74p0) < n_in73p2)
	{
		n_out73p0 = vec3(n_out50p4);
	}
	else if(n_out50p4 < n_out74p0)
	{
		n_out73p0 = n_in73p5;
	}
	else
	{
		n_out73p0 = vec3(n_out50p4);
	}


// Output:0
	COLOR.rgb = vec3(n_out50p0.xyz);
	COLOR.a = n_out73p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(460, 120)
nodes/fragment/28/node = SubResource("VisualShaderNodeIf_4doxw")
nodes/fragment/28/position = Vector2(-980, 280)
nodes/fragment/37/node = SubResource("VisualShaderNodeInput_hmdxm")
nodes/fragment/37/position = Vector2(-1740, 260)
nodes/fragment/42/node = SubResource("VisualShaderNodeFloatParameter_pq22b")
nodes/fragment/42/position = Vector2(-1960, 400)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatFunc_f2dvt")
nodes/fragment/43/position = Vector2(-1300, 400)
nodes/fragment/44/node = SubResource("VisualShaderNodeFloatOp_abmxc")
nodes/fragment/44/position = Vector2(-1220, 260)
nodes/fragment/50/node = SubResource("VisualShaderNodeMix_vy04x")
nodes/fragment/50/position = Vector2(60, 100)
nodes/fragment/51/node = SubResource("VisualShaderNodeColorParameter_p0fum")
nodes/fragment/51/position = Vector2(-1020, -260)
nodes/fragment/52/node = SubResource("VisualShaderNodeColorParameter_kvprr")
nodes/fragment/52/position = Vector2(-1020, -60)
nodes/fragment/54/node = SubResource("VisualShaderNodeFloatConstant_txxce")
nodes/fragment/54/position = Vector2(-1300, 480)
nodes/fragment/56/node = SubResource("VisualShaderNodeVectorDistance_1jt4x")
nodes/fragment/56/position = Vector2(-1400, 180)
nodes/fragment/58/node = SubResource("VisualShaderNodeFloatOp_tgrei")
nodes/fragment/58/position = Vector2(-960, 140)
nodes/fragment/59/node = SubResource("VisualShaderNodeFloatParameter_o77hu")
nodes/fragment/59/position = Vector2(-1520, -40)
nodes/fragment/60/node = SubResource("VisualShaderNodeFloatOp_7djsj")
nodes/fragment/60/position = Vector2(-1480, 400)
nodes/fragment/61/node = SubResource("VisualShaderNodeFloatOp_n1mmh")
nodes/fragment/61/position = Vector2(-1640, 400)
nodes/fragment/66/node = SubResource("VisualShaderNodeFloatFunc_5uegd")
nodes/fragment/66/position = Vector2(-1220, 180)
nodes/fragment/67/node = SubResource("VisualShaderNodeColorConstant_bfq1x")
nodes/fragment/67/position = Vector2(-260, -140)
nodes/fragment/69/node = SubResource("VisualShaderNodeVectorCompose_0wvks")
nodes/fragment/69/position = Vector2(-260, -60)
nodes/fragment/70/node = SubResource("VisualShaderNodeIf_vr8t6")
nodes/fragment/70/position = Vector2(-620, -60)
nodes/fragment/71/node = SubResource("VisualShaderNodeVectorDecompose_7p3k8")
nodes/fragment/71/position = Vector2(-440, -60)
nodes/fragment/72/node = SubResource("VisualShaderNodeFloatParameter_be0k5")
nodes/fragment/72/position = Vector2(-620, 140)
nodes/fragment/73/node = SubResource("VisualShaderNodeIf_imh7f")
nodes/fragment/73/position = Vector2(260, 280)
nodes/fragment/74/node = SubResource("VisualShaderNodeFloatParameter_p0f5d")
nodes/fragment/74/position = Vector2(-180, 320)
nodes/fragment/connections = PackedInt32Array(37, 1, 44, 0, 37, 2, 44, 1, 50, 0, 0, 0, 54, 0, 28, 3, 54, 0, 28, 4, 59, 0, 58, 0, 42, 0, 61, 0, 61, 0, 60, 0, 37, 0, 56, 1, 56, 0, 66, 0, 60, 0, 43, 0, 43, 0, 28, 1, 44, 0, 28, 0, 67, 0, 50, 0, 69, 0, 50, 1, 28, 0, 70, 0, 70, 0, 71, 0, 71, 0, 69, 0, 71, 1, 69, 1, 71, 2, 69, 2, 52, 0, 70, 5, 51, 0, 70, 4, 58, 0, 50, 2, 66, 0, 58, 1, 72, 0, 69, 3, 50, 4, 73, 0, 74, 0, 73, 1, 73, 0, 0, 1, 50, 4, 73, 4, 50, 4, 73, 3)
